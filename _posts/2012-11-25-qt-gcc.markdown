---
layout: post
title:  "Compiling Qt on the command line"
subtitle: ""
date:      2012-11-25 00:00:00 +00:00
updated:   2012-11-25 00:00:00 +00:00
categories: C++
disqus: true
tags: Qt C++ gcc UNIX
---

Most Qt tutorial sseem to assume you want to code everything in Qt Creator.
Here's how you can do it on the command line.

Create a directory `foo` and then put the following into `foo.cpp`:

{% highlight C++ %}
#include <qapplication.h>
#include <qpushbutton.h>

int main(int argc, char** argv)
{
  QApplication app(argc, argv);

  QPushButton hello("Hello world!", 0);
  hello.resize(100, 30);
  hello.show();

  return app.exec();
}
{% endhighlight %}

Using `qmake`, first set up a new Qt project, then create a GNU makefile.

    $ qmake -project # creates foo.pro
    $ qmake -makefile # creates Makefile
    $ ls
    Makefile foo.cpp foo.pro

Now you can simple `make` the app.  It depends on the system what the final
binary will be called.  For instance, on OS X, it will be `foo.app/`, an app
bundle.

Building and running the app,

    $ make
    $ open foo.app

the result should look similar to the image below.

!["Hello, world" in Qt](/gfx/post/qt-gcc.png)
